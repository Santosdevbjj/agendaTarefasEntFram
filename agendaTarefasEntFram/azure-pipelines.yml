trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
  - task: DotNetCoreCLI@2
    displayName: 'Restore dependencies'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Build solution'
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests'
    inputs:
      command: 'test'
      projects: '**/*Tests.Unit.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'Run integration tests'
    inputs:
      command: 'test'
      projects: '**/*Tests.Integration.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'Publish Web API project'
    inputs:
      command: 'publish'
      projects: 'AgendaTarefas.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/publish'
      ArtifactName: 'drop'



trigger:
  branches:
    include:
      - dev
      - main

variables:
  - template: .template/variables-template.yml

stages:
  # Ambiente de Dev
  - template: .template/stage-template.yml
    parameters:
      stageName: Dev
      variableGroup: DevVariables
      azureWebAppName: $(DevWebApp)
      azureSubscription: $(DevSubscription)

  # Ambiente de Produção (com approval)
  - template: .template/stage-template.yml
    parameters:
      stageName: Prod
      variableGroup: ProdVariables
      azureWebAppName: $(ProdWebApp)
      azureSubscription: $(ProdSubscription)
      
